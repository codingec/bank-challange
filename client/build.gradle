plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.bank'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.6.1'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.projectlombok:lombok:1.18.34'
	compileOnly 'org.projectlombok:lombok:1.18.34'

	annotationProcessor  'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	implementation 'org.mapstruct:mapstruct:1.6.2'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.instancio:instancio-core:5.1.0'
	testImplementation 'org.instancio:instancio-junit:5.1.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly 'org.projectlombok:lombok:1.18.34'
	testAnnotationProcessor  'org.projectlombok:lombok:1.18.34'
	testRuntimeOnly 'com.h2database:h2'

}

jacoco {
	toolVersion = "0.8.12"
	reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
}


jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: [
							'**/model/config/**',
							'**/services/dto/**',
							'**/services/mappers/**'
					])
		})
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 1
			}
		}
	}
}

test {
	finalizedBy jacocoTestReport
	useJUnitPlatform()
}
