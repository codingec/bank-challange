# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  BuildClient:
    name: Build Client MS and run tests 
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          server-id: github
          settings-path: ${{ github.workspace }}
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Replace placeholders Client properties application.properties
        working-directory: ./client
        run: |
            sed -i "s|\${PORT}|${PORT}|g" src/main/resources/application.properties
            sed -i "s|\${SWAGGER_ENABLE}|${SWAGGER_ENABLE}|g" src/main/resources/application.properties
            sed -i "s|\${SPRING_PROFILE}|${SPRING_PROFILE}|g" src/main/resources/application.properties
            sed -i "s|\${JDBC_URL}|${JDBC_URL}|g" src/main/resources/application.properties
            sed -i "s|\${JDBC_DRIVER}|${JDBC_DRIVER}|g" src/main/resources/application.properties
            sed -i "s|\${JDBC_PASSWORD}|${JDBC_PASSWORD}|g" src/main/resources/application.properties
            sed -i "s|\${HIBERNATE_DDL}|${HIBERNATE_DDL}|g" src/main/resources/application.properties
            sed -i "s|\${HIBERNATE_GENERATE}|${HIBERNATE_GENERATE}|g" src/main/resources/application.properties
            sed -i "s|\${HIBERNATE_DIALECT}|${HIBERNATE_DIALECT}|g" src/main/resources/application.properties
        env:
          PORT: ${{ secrets.PORT_CLIENT }}
          SWAGGER_ENABLE: ${{ secrets.SWAGGER_ENABLE }}
          SPRING_PROFILE: ${{ secrets.SPRING_PROFILE }}
          JDBC_URL: ${{ secrets.JDBC_URL }}
          JDBC_DRIVER: ${{ secrets.JDBC_DRIVER }}
          JDBC_USERNAME: ${{ secrets.JDBC_USERNAME }}
          JDBC_PASSWORD: ${{ secrets.JDBC_PASSWORD }}
          HIBERNATE_DDL: ${{ secrets.HIBERNATE_DDL }}
          HIBERNATE_GENERATE: ${{ secrets.HIBERNATE_GENERATE }}
          HIBERNATE_DIALECT: ${{ secrets.HIBERNATE_DIALECT }}

      - name: Change wrapper permissions
        working-directory: ./client
        run: |
          chmod +x ./gradlew
          chmod +x gradlew
          chmod +x ./gradle
          chmod +x gradle
            
      - name: Build Client Microservice
        working-directory: ./client
        run: ./gradlew build --no-daemon

      - name: Run unit tests of Client Microservice
        working-directory: ./client
        run: ./gradlew test
        
  BuildAccountAndMovement:
    name: Build Account and Movement MS and run tests 
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          server-id: github
          settings-path: ${{ github.workspace }}
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Replace placeholders Account and Movement properties application.properties
        working-directory: ./account_movement
        run: |
          sed -i "s|\${PORT}|${PORT}|g" src/main/resources/application.properties
          sed -i "s|\${SWAGGER_ENABLE}|${SWAGGER_ENABLE}|g" src/main/resources/application.properties
          sed -i "s|\${SPRING_PROFILE}|${SPRING_PROFILE}|g" src/main/resources/application.properties
          sed -i "s|\${JDBC_URL}|${JDBC_URL}|g" src/main/resources/application.properties
          sed -i "s|\${JDBC_DRIVER}|${JDBC_DRIVER}|g" src/main/resources/application.properties
          sed -i "s|\${JDBC_PASSWORD}|${JDBC_PASSWORD}|g" src/main/resources/application.properties
          sed -i "s|\${HIBERNATE_DDL}|${HIBERNATE_DDL}|g" src/main/resources/application.properties
          sed -i "s|\${HIBERNATE_GENERATE}|${HIBERNATE_GENERATE}|g" src/main/resources/application.properties
          sed -i "s|\${HIBERNATE_DIALECT}|${HIBERNATE_DIALECT}|g" src/main/resources/application.properties
          sed -i "s|\${CLIENT_ENDPOINT}|${CLIENT_ENDPOINT}|g" src/main/resources/application.properties
        env:
          PORT: ${{ secrets.PORT_CLIENT }}
          SWAGGER_ENABLE: ${{ secrets.SWAGGER_ENABLE }}
          SPRING_PROFILE: ${{ secrets.SPRING_PROFILE }}
          JDBC_URL: ${{ secrets.JDBC_URL }}
          JDBC_DRIVER: ${{ secrets.JDBC_DRIVER }}
          JDBC_USERNAME: ${{ secrets.JDBC_USERNAME }}
          JDBC_PASSWORD: ${{ secrets.JDBC_PASSWORD }}
          HIBERNATE_DDL: ${{ secrets.HIBERNATE_DDL }}
          HIBERNATE_GENERATE: ${{ secrets.HIBERNATE_GENERATE }}
          HIBERNATE_DIALECT: ${{ secrets.HIBERNATE_DIALECT }}
          CLIENT_ENDPOINT: ${{ secrets.CLIENT_ENDPOINT }}

      - name: Change wrapper permissions
        working-directory: ./account_movement
        run: |
          chmod +x ./gradlew
          chmod +x gradlew
          chmod +x ./gradle
          chmod +x gradle
          
      - name: Build Account and Movement Microservice
        working-directory: ./account_movement
        run: ./gradlew build --no-daemon

      - name: Run unit tests of Account and Movement Microservice
        working-directory: ./account_movement
        run: ./gradlew test    
        
